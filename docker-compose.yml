version: '3.9'

services:
  backend:
    build: ./backend
    container_name: backend_container
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - SECRET_KEY=your_secret_key
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "cfcollab.wsgi:application"]

  frontend:
    build: ./frontend
    container_name: frontend_container
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: ["npm", "run", "dev"]

  db:
    image: postgres:15
    container_name: postgres_db
    networks: 
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: JordiSnake
    env_file:
      - .env

  web:
    build: ./backend
    container_name: django_web
    networks: 
      - app-network
    command: gunicorn cfcollab.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - static_volume:/app/static
    expose:
      - 8000
    environment:
      - SECRET_KEY=django-insecure-m)o@7!*ln_t6rp^7^&1eq-17ih2vwhxn#dwj-z++-u8!90=ia2
      - DEBUG=True
      - DB_NAME=collabdb
      - DB_USER=postgres
      - DB_PASSWORD=JordiSnake
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx
    networks: 
      - app-network
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/static
      - ./staticfiles:/root/app/staticfiles
    depends_on:
      - web

volumes:
  static_volume:
  postgres_data:

networks: 
  app-network: 
    driver: bridge
