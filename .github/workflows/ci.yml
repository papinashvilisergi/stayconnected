name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest

    env:
      SERVER_IP: 167.99.138.11

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Add Server to known_hosts
      run: |
        ssh-keyscan -H 167.99.138.11 >> ~/.ssh/known_hosts

    - name: Sync Project to Server
      run: |
        rsync -avz --exclude 'node_modules' --exclude 'venv' ./ root@167.99.138.11:/root/stayconnected/

    - name: Install Frontend Dependencies
      run: |
        ssh -i /root/.ssh/ubuntu_server_key root@167.99.138.11 << 'EOF'
          cd /root/stayconnected/frontend
          if [ ! -d "node_modules" ]; then
            npm install
          fi
          # Kill any existing process using port 8080
          fuser -k 8080/tcp || true
          pgrep -f "vite" || nohup npm run dev -- --port 8080 & disown
        EOF

    - name: Install Backend Requirements
      run: |
        ssh -i /root/.ssh/ubuntu_server_key root@167.99.138.11 << 'EOF'
          cd /root/stayconnected/backend
          if [ -z "$VIRTUAL_ENV" ]; then
            source venv/bin/activate
          fi
          pip freeze > /tmp/installed_requirements.txt
          if ! diff /root/stayconnected/backend/requirements.txt /tmp/installed_requirements.txt; then
            pip install -r /root/stayconnected/backend/requirements.txt
          fi
        EOF

    - name: Start Backend Server
      run: |
        ssh -i /root/.ssh/ubuntu_server_key root@167.99.138.11 << 'EOF'
          cd /root/stayconnected/backend
          if [ -z "$VIRTUAL_ENV" ]; then
            source venv/bin/activate
          fi
          # Kill any existing process using port 8000
          fuser -k 8000/tcp || true
          pgrep -f "manage.py runserver" || nohup python3 manage.py runserver 0.0.0.0:8000 & disown
        EOF

    - name: Start Frontend Server
      run: |
        ssh -i /root/.ssh/ubuntu_server_key root@167.99.138.11 << 'EOF'
          cd /root/stayconnected/frontend
          pgrep -f "vite" || nohup npm run dev -- --port 8080 & disown
        EOF
